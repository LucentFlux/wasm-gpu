use wasm_opcodes::SIMDOperator;

use crate::build;

pub(crate) fn eat_simd_operator(
    state: &mut super::ActiveBlock,
    simd_op: SIMDOperator,
) -> build::Result<()> {
    match simd_op {
        SIMDOperator::V128Load { memarg } => unimplemented!(),
        SIMDOperator::V128Load8x8S { memarg } => unimplemented!(),
        SIMDOperator::V128Load8x8U { memarg } => unimplemented!(),
        SIMDOperator::V128Load16x4S { memarg } => unimplemented!(),
        SIMDOperator::V128Load16x4U { memarg } => unimplemented!(),
        SIMDOperator::V128Load32x2S { memarg } => unimplemented!(),
        SIMDOperator::V128Load32x2U { memarg } => unimplemented!(),
        SIMDOperator::V128Load8Splat { memarg } => unimplemented!(),
        SIMDOperator::V128Load16Splat { memarg } => unimplemented!(),
        SIMDOperator::V128Load32Splat { memarg } => unimplemented!(),
        SIMDOperator::V128Load64Splat { memarg } => unimplemented!(),
        SIMDOperator::V128Load32Zero { memarg } => unimplemented!(),
        SIMDOperator::V128Load64Zero { memarg } => unimplemented!(),
        SIMDOperator::V128Store { memarg } => unimplemented!(),
        SIMDOperator::V128Load8Lane { memarg, lane: u8 } => unimplemented!(),
        SIMDOperator::V128Load16Lane { memarg, lane: u8 } => unimplemented!(),
        SIMDOperator::V128Load32Lane { memarg, lane: u8 } => unimplemented!(),
        SIMDOperator::V128Load64Lane { memarg, lane: u8 } => unimplemented!(),
        SIMDOperator::V128Store8Lane { memarg, lane: u8 } => unimplemented!(),
        SIMDOperator::V128Store16Lane { memarg, lane: u8 } => unimplemented!(),
        SIMDOperator::V128Store32Lane { memarg, lane: u8 } => unimplemented!(),
        SIMDOperator::V128Store64Lane { memarg, lane: u8 } => unimplemented!(),
        SIMDOperator::V128Const { value } => unimplemented!(),
        SIMDOperator::I8x16Shuffle { lanes } => unimplemented!(),
        SIMDOperator::I8x16ExtractLaneS { lane: u8 } => unimplemented!(),
        SIMDOperator::I8x16ExtractLaneU { lane: u8 } => unimplemented!(),
        SIMDOperator::I8x16ReplaceLane { lane: u8 } => unimplemented!(),
        SIMDOperator::I16x8ExtractLaneS { lane: u8 } => unimplemented!(),
        SIMDOperator::I16x8ExtractLaneU { lane: u8 } => unimplemented!(),
        SIMDOperator::I16x8ReplaceLane { lane: u8 } => unimplemented!(),
        SIMDOperator::I32x4ExtractLane { lane: u8 } => unimplemented!(),
        SIMDOperator::I32x4ReplaceLane { lane: u8 } => unimplemented!(),
        SIMDOperator::I64x2ExtractLane { lane: u8 } => unimplemented!(),
        SIMDOperator::I64x2ReplaceLane { lane: u8 } => unimplemented!(),
        SIMDOperator::F32x4ExtractLane { lane: u8 } => unimplemented!(),
        SIMDOperator::F32x4ReplaceLane { lane: u8 } => unimplemented!(),
        SIMDOperator::F64x2ExtractLane { lane: u8 } => unimplemented!(),
        SIMDOperator::F64x2ReplaceLane { lane: u8 } => unimplemented!(),
        SIMDOperator::I8x16Swizzle => unimplemented!(),
        SIMDOperator::I8x16Splat => unimplemented!(),
        SIMDOperator::I16x8Splat => unimplemented!(),
        SIMDOperator::I32x4Splat => unimplemented!(),
        SIMDOperator::I64x2Splat => unimplemented!(),
        SIMDOperator::F32x4Splat => unimplemented!(),
        SIMDOperator::F64x2Splat => unimplemented!(),
        SIMDOperator::I8x16Eq => unimplemented!(),
        SIMDOperator::I8x16Ne => unimplemented!(),
        SIMDOperator::I8x16LtS => unimplemented!(),
        SIMDOperator::I8x16LtU => unimplemented!(),
        SIMDOperator::I8x16GtS => unimplemented!(),
        SIMDOperator::I8x16GtU => unimplemented!(),
        SIMDOperator::I8x16LeS => unimplemented!(),
        SIMDOperator::I8x16LeU => unimplemented!(),
        SIMDOperator::I8x16GeS => unimplemented!(),
        SIMDOperator::I8x16GeU => unimplemented!(),
        SIMDOperator::I16x8Eq => unimplemented!(),
        SIMDOperator::I16x8Ne => unimplemented!(),
        SIMDOperator::I16x8LtS => unimplemented!(),
        SIMDOperator::I16x8LtU => unimplemented!(),
        SIMDOperator::I16x8GtS => unimplemented!(),
        SIMDOperator::I16x8GtU => unimplemented!(),
        SIMDOperator::I16x8LeS => unimplemented!(),
        SIMDOperator::I16x8LeU => unimplemented!(),
        SIMDOperator::I16x8GeS => unimplemented!(),
        SIMDOperator::I16x8GeU => unimplemented!(),
        SIMDOperator::I32x4Eq => unimplemented!(),
        SIMDOperator::I32x4Ne => unimplemented!(),
        SIMDOperator::I32x4LtS => unimplemented!(),
        SIMDOperator::I32x4LtU => unimplemented!(),
        SIMDOperator::I32x4GtS => unimplemented!(),
        SIMDOperator::I32x4GtU => unimplemented!(),
        SIMDOperator::I32x4LeS => unimplemented!(),
        SIMDOperator::I32x4LeU => unimplemented!(),
        SIMDOperator::I32x4GeS => unimplemented!(),
        SIMDOperator::I32x4GeU => unimplemented!(),
        SIMDOperator::I64x2Eq => unimplemented!(),
        SIMDOperator::I64x2Ne => unimplemented!(),
        SIMDOperator::I64x2LtS => unimplemented!(),
        SIMDOperator::I64x2GtS => unimplemented!(),
        SIMDOperator::I64x2LeS => unimplemented!(),
        SIMDOperator::I64x2GeS => unimplemented!(),
        SIMDOperator::F32x4Eq => unimplemented!(),
        SIMDOperator::F32x4Ne => unimplemented!(),
        SIMDOperator::F32x4Lt => unimplemented!(),
        SIMDOperator::F32x4Gt => unimplemented!(),
        SIMDOperator::F32x4Le => unimplemented!(),
        SIMDOperator::F32x4Ge => unimplemented!(),
        SIMDOperator::F64x2Eq => unimplemented!(),
        SIMDOperator::F64x2Ne => unimplemented!(),
        SIMDOperator::F64x2Lt => unimplemented!(),
        SIMDOperator::F64x2Gt => unimplemented!(),
        SIMDOperator::F64x2Le => unimplemented!(),
        SIMDOperator::F64x2Ge => unimplemented!(),
        SIMDOperator::V128Not => unimplemented!(),
        SIMDOperator::V128And => unimplemented!(),
        SIMDOperator::V128AndNot => unimplemented!(),
        SIMDOperator::V128Or => unimplemented!(),
        SIMDOperator::V128Xor => unimplemented!(),
        SIMDOperator::V128Bitselect => unimplemented!(),
        SIMDOperator::V128AnyTrue => unimplemented!(),
        SIMDOperator::I8x16Abs => unimplemented!(),
        SIMDOperator::I8x16Neg => unimplemented!(),
        SIMDOperator::I8x16Popcnt => unimplemented!(),
        SIMDOperator::I8x16AllTrue => unimplemented!(),
        SIMDOperator::I8x16Bitmask => unimplemented!(),
        SIMDOperator::I8x16NarrowI16x8S => unimplemented!(),
        SIMDOperator::I8x16NarrowI16x8U => unimplemented!(),
        SIMDOperator::I8x16Shl => unimplemented!(),
        SIMDOperator::I8x16ShrS => unimplemented!(),
        SIMDOperator::I8x16ShrU => unimplemented!(),
        SIMDOperator::I8x16Add => unimplemented!(),
        SIMDOperator::I8x16AddSatS => unimplemented!(),
        SIMDOperator::I8x16AddSatU => unimplemented!(),
        SIMDOperator::I8x16Sub => unimplemented!(),
        SIMDOperator::I8x16SubSatS => unimplemented!(),
        SIMDOperator::I8x16SubSatU => unimplemented!(),
        SIMDOperator::I8x16MinS => unimplemented!(),
        SIMDOperator::I8x16MinU => unimplemented!(),
        SIMDOperator::I8x16MaxS => unimplemented!(),
        SIMDOperator::I8x16MaxU => unimplemented!(),
        SIMDOperator::I8x16AvgrU => unimplemented!(),
        SIMDOperator::I16x8ExtAddPairwiseI8x16S => unimplemented!(),
        SIMDOperator::I16x8ExtAddPairwiseI8x16U => unimplemented!(),
        SIMDOperator::I16x8Abs => unimplemented!(),
        SIMDOperator::I16x8Neg => unimplemented!(),
        SIMDOperator::I16x8Q15MulrSatS => unimplemented!(),
        SIMDOperator::I16x8AllTrue => unimplemented!(),
        SIMDOperator::I16x8Bitmask => unimplemented!(),
        SIMDOperator::I16x8NarrowI32x4S => unimplemented!(),
        SIMDOperator::I16x8NarrowI32x4U => unimplemented!(),
        SIMDOperator::I16x8ExtendLowI8x16S => unimplemented!(),
        SIMDOperator::I16x8ExtendHighI8x16S => unimplemented!(),
        SIMDOperator::I16x8ExtendLowI8x16U => unimplemented!(),
        SIMDOperator::I16x8ExtendHighI8x16U => unimplemented!(),
        SIMDOperator::I16x8Shl => unimplemented!(),
        SIMDOperator::I16x8ShrS => unimplemented!(),
        SIMDOperator::I16x8ShrU => unimplemented!(),
        SIMDOperator::I16x8Add => unimplemented!(),
        SIMDOperator::I16x8AddSatS => unimplemented!(),
        SIMDOperator::I16x8AddSatU => unimplemented!(),
        SIMDOperator::I16x8Sub => unimplemented!(),
        SIMDOperator::I16x8SubSatS => unimplemented!(),
        SIMDOperator::I16x8SubSatU => unimplemented!(),
        SIMDOperator::I16x8Mul => unimplemented!(),
        SIMDOperator::I16x8MinS => unimplemented!(),
        SIMDOperator::I16x8MinU => unimplemented!(),
        SIMDOperator::I16x8MaxS => unimplemented!(),
        SIMDOperator::I16x8MaxU => unimplemented!(),
        SIMDOperator::I16x8AvgrU => unimplemented!(),
        SIMDOperator::I16x8ExtMulLowI8x16S => unimplemented!(),
        SIMDOperator::I16x8ExtMulHighI8x16S => unimplemented!(),
        SIMDOperator::I16x8ExtMulLowI8x16U => unimplemented!(),
        SIMDOperator::I16x8ExtMulHighI8x16U => unimplemented!(),
        SIMDOperator::I32x4ExtAddPairwiseI16x8S => unimplemented!(),
        SIMDOperator::I32x4ExtAddPairwiseI16x8U => unimplemented!(),
        SIMDOperator::I32x4Abs => unimplemented!(),
        SIMDOperator::I32x4Neg => unimplemented!(),
        SIMDOperator::I32x4AllTrue => unimplemented!(),
        SIMDOperator::I32x4Bitmask => unimplemented!(),
        SIMDOperator::I32x4ExtendLowI16x8S => unimplemented!(),
        SIMDOperator::I32x4ExtendHighI16x8S => unimplemented!(),
        SIMDOperator::I32x4ExtendLowI16x8U => unimplemented!(),
        SIMDOperator::I32x4ExtendHighI16x8U => unimplemented!(),
        SIMDOperator::I32x4Shl => unimplemented!(),
        SIMDOperator::I32x4ShrS => unimplemented!(),
        SIMDOperator::I32x4ShrU => unimplemented!(),
        SIMDOperator::I32x4Add => unimplemented!(),
        SIMDOperator::I32x4Sub => unimplemented!(),
        SIMDOperator::I32x4Mul => unimplemented!(),
        SIMDOperator::I32x4MinS => unimplemented!(),
        SIMDOperator::I32x4MinU => unimplemented!(),
        SIMDOperator::I32x4MaxS => unimplemented!(),
        SIMDOperator::I32x4MaxU => unimplemented!(),
        SIMDOperator::I32x4DotI16x8S => unimplemented!(),
        SIMDOperator::I32x4ExtMulLowI16x8S => unimplemented!(),
        SIMDOperator::I32x4ExtMulHighI16x8S => unimplemented!(),
        SIMDOperator::I32x4ExtMulLowI16x8U => unimplemented!(),
        SIMDOperator::I32x4ExtMulHighI16x8U => unimplemented!(),
        SIMDOperator::I64x2Abs => unimplemented!(),
        SIMDOperator::I64x2Neg => unimplemented!(),
        SIMDOperator::I64x2AllTrue => unimplemented!(),
        SIMDOperator::I64x2Bitmask => unimplemented!(),
        SIMDOperator::I64x2ExtendLowI32x4S => unimplemented!(),
        SIMDOperator::I64x2ExtendHighI32x4S => unimplemented!(),
        SIMDOperator::I64x2ExtendLowI32x4U => unimplemented!(),
        SIMDOperator::I64x2ExtendHighI32x4U => unimplemented!(),
        SIMDOperator::I64x2Shl => unimplemented!(),
        SIMDOperator::I64x2ShrS => unimplemented!(),
        SIMDOperator::I64x2ShrU => unimplemented!(),
        SIMDOperator::I64x2Add => unimplemented!(),
        SIMDOperator::I64x2Sub => unimplemented!(),
        SIMDOperator::I64x2Mul => unimplemented!(),
        SIMDOperator::I64x2ExtMulLowI32x4S => unimplemented!(),
        SIMDOperator::I64x2ExtMulHighI32x4S => unimplemented!(),
        SIMDOperator::I64x2ExtMulLowI32x4U => unimplemented!(),
        SIMDOperator::I64x2ExtMulHighI32x4U => unimplemented!(),
        SIMDOperator::F32x4Ceil => unimplemented!(),
        SIMDOperator::F32x4Floor => unimplemented!(),
        SIMDOperator::F32x4Trunc => unimplemented!(),
        SIMDOperator::F32x4Nearest => unimplemented!(),
        SIMDOperator::F32x4Abs => unimplemented!(),
        SIMDOperator::F32x4Neg => unimplemented!(),
        SIMDOperator::F32x4Sqrt => unimplemented!(),
        SIMDOperator::F32x4Add => unimplemented!(),
        SIMDOperator::F32x4Sub => unimplemented!(),
        SIMDOperator::F32x4Mul => unimplemented!(),
        SIMDOperator::F32x4Div => unimplemented!(),
        SIMDOperator::F32x4Min => unimplemented!(),
        SIMDOperator::F32x4Max => unimplemented!(),
        SIMDOperator::F32x4PMin => unimplemented!(),
        SIMDOperator::F32x4PMax => unimplemented!(),
        SIMDOperator::F64x2Ceil => unimplemented!(),
        SIMDOperator::F64x2Floor => unimplemented!(),
        SIMDOperator::F64x2Trunc => unimplemented!(),
        SIMDOperator::F64x2Nearest => unimplemented!(),
        SIMDOperator::F64x2Abs => unimplemented!(),
        SIMDOperator::F64x2Neg => unimplemented!(),
        SIMDOperator::F64x2Sqrt => unimplemented!(),
        SIMDOperator::F64x2Add => unimplemented!(),
        SIMDOperator::F64x2Sub => unimplemented!(),
        SIMDOperator::F64x2Mul => unimplemented!(),
        SIMDOperator::F64x2Div => unimplemented!(),
        SIMDOperator::F64x2Min => unimplemented!(),
        SIMDOperator::F64x2Max => unimplemented!(),
        SIMDOperator::F64x2PMin => unimplemented!(),
        SIMDOperator::F64x2PMax => unimplemented!(),
        SIMDOperator::I32x4TruncSatF32x4S => unimplemented!(),
        SIMDOperator::I32x4TruncSatF32x4U => unimplemented!(),
        SIMDOperator::F32x4ConvertI32x4S => unimplemented!(),
        SIMDOperator::F32x4ConvertI32x4U => unimplemented!(),
        SIMDOperator::I32x4TruncSatF64x2SZero => unimplemented!(),
        SIMDOperator::I32x4TruncSatF64x2UZero => unimplemented!(),
        SIMDOperator::F64x2ConvertLowI32x4S => unimplemented!(),
        SIMDOperator::F64x2ConvertLowI32x4U => unimplemented!(),
        SIMDOperator::F32x4DemoteF64x2Zero => unimplemented!(),
        SIMDOperator::F64x2PromoteLowF32x4 => unimplemented!(),
    }
}
